
package Prodigy;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

public class CalculatorTest {
    private Calculator calculator;

    @BeforeEach
    void setUp() {
        calculator = new Calculator();
    }

    @Test
    void testAddition() {
        assertEquals(5.0, calculator.add(2, 3));
        assertEquals(-1.0, calculator.add(-2, 1));
        assertEquals(5.5, calculator.add(2.5, 3.0));
    }

    @Test
    void testSubtraction() {
        assertEquals(1.0, calculator.subtract(3, 2));
        assertEquals(-3.0, calculator.subtract(-2, 1));
        assertEquals(-0.5, calculator.subtract(2.5, 3.0));
    }

    @Test
    void testMultiplication() {
        assertEquals(6.0, calculator.multiply(2, 3));
        assertEquals(-2.0, calculator.multiply(-2, 1));
        assertEquals(7.5, calculator.multiply(2.5, 3.0));
    }

    @Test
    void testDivision() {
        assertEquals(2.0, calculator.divide(6, 3));
        assertEquals(-2.0, calculator.divide(-6, 3));
        assertEquals(2.5, calculator.divide(5.0, 2.0));
    }

    @Test
    void testDivisionByZero() {
        Exception exception = assertThrows(ArithmeticException.class, () -> calculator.divide(5, 0));
        assertEquals("Division by zero is not allowed", exception.getMessage());
    }
}

class Calculator {
	
	    public double add(double a, double b) {
	        return a + b;
	    }

	    public double subtract(double a, double b) {
	        return a - b;
	    }

	    public double multiply(double a, double b) {
	        return a * b;
	    }

	    public double divide(double a, double b) {
	        if (b == 0) {
	            throw new ArithmeticException("Division by zero is not allowed");
	        }
	        return a / b;
	    }
	}
